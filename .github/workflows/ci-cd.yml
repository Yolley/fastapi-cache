name: CI/CD
on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: 3.12
          enable-cache: true
          cache-dependency-glob: uv.lock
      - name: Cache mypy cache
        uses: actions/cache@v4
        with:
          path: .mypy_cache
          key: ${{ runner.os }}-mypy-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-mypy-${{ steps.setup-python.outputs.python-version }}-
            ${{ runner.os }}-mypy-
      - name: Install dependencies
        run: make deps
      - name: Execute linters
        run: make lint

  test:
    needs:
      - lint
    strategy:
      matrix:
        python: ["3.11", "3.12"]
      fail-fast: false

    name: "Test on Python ${{ matrix.python }}"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install Poetry
        run: pipx install poetry
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          python-version: ${{ matrix.python }}
      - name: Install testing requirements
        run: |
          make deps
          uv run --no-sync pip install tox-gh-actions
      - name: Execute tests
        run: uv run --no-sync tox

  test-summary:
    name: Test matrix status
    runs-on: ubuntu-latest
    needs: [test]
    if: always()
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}

  build:
    name: Build distributions
    runs-on: ubuntu-latest
    needs: [test-summary]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: 3.12
          enable-cache: true
          cache-dependency-glob: uv.lock
      - name: Build distributions
        run: make build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  publish:
    name: Build and publish Python üêç distributions üì¶ to PyPI
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      # The URL is used in the 'successfully deployed' message as the link
      # for the 'View deployment' button.
      url: https://pypi.org/p/fastapi-cache2-fork
    permissions:
      id-token: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
